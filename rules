program         decls compoundstmt
decls           decl ; decls
decls           ~
decl            int ID = INTNUM
decl            real ID = REALNUM
stmt            ifstmt
stmt            assgstmt
stmt            compoundstmt
compoundstmt    { stmts }
stmts           stmt stmts
stmts           ~
ifstmt          if ( boolexpr ) then stmt else stmt
assgstmt        ID = arithexpr ;
boolexpr        arithexpr boolop arithexpr
boolop          <
boolop          >
boolop          <=
boolop          >=
boolop          ==
arithexpr       multexpr arithexprprime
arithexprprime  + multexpr arithexprprime
arithexprprime  - multexpr arithexprprime
arithexprprime  ~
multexpr        simpleexpr multexprprime
multexprprime   * simpleexpr multexprprime
multexprprime   / simpleexpr multexprprime
multexprprime   ~
simpleexpr      ID
simpleexpr      INTNUM
simpleexpr      REALNUM
simpleexpr      ( arithexpr )